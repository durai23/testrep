%PDF-1.4
%“Œ‹ž ReportLab Generated PDF document http://www.reportlab.com
1 0 obj
<< /F1 2 0 R /F2 3 0 R /F3 4 0 R >>
endobj
2 0 obj
<< /BaseFont /Helvetica /Encoding /WinAnsiEncoding /Name /F1 /Subtype /Type1 /Type /Font >>
endobj
3 0 obj
<< /BaseFont /Helvetica-Bold /Encoding /WinAnsiEncoding /Name /F2 /Subtype /Type1 /Type /Font >>
endobj
4 0 obj
<< /BaseFont /Courier /Encoding /WinAnsiEncoding /Name /F3 /Subtype /Type1 /Type /Font >>
endobj
5 0 obj
<< /Contents 11 0 R /MediaBox [ 0 0 595.2756 841.8898 ] /Parent 10 0 R /Resources << /Font 1 0 R /ProcSet [ /PDF /Text /ImageB /ImageC /ImageI ] >> /Rotate 0 /Trans <<  >> 
  /Type /Page >>
endobj
6 0 obj
<< /Outlines 8 0 R /PageLabels 12 0 R /PageMode /UseNone /Pages 10 0 R /Type /Catalog >>
endobj
7 0 obj
<< /Author () /CreationDate (D:20160426082423-01'00') /Creator (\(unspecified\)) /Keywords () /Producer (ReportLab PDF Library - www.reportlab.com) /Subject (\(unspecified\)) 
  /Title (Instructions) >>
endobj
8 0 obj
<< /Count 1 /First 9 0 R /Last 9 0 R /Type /Outlines >>
endobj
9 0 obj
<< /Dest [ 5 0 R /XYZ 62.69291 695.0236 0 ] /Parent 8 0 R /Title (Data transfer with unified memory) >>
endobj
10 0 obj
<< /Count 1 /Kids [ 5 0 R ] /Type /Pages >>
endobj
11 0 obj
<< /Length 1803 >>
stream
1 0 0 1 0 0 cm  BT /F1 12 Tf 14.4 TL ET
q
1 0 0 1 62.69291 741.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 4 Tm /F2 20 Tf 24 TL 177.7149 0 Td (Instructions) Tj T* -177.7149 0 Td ET
Q
Q
q
1 0 0 1 62.69291 707.0236 cm
q
BT 1 0 0 1 0 14 Tm 1.069431 Tw 12 TL /F1 10 Tf 0 0 0 rg (In this exercise, we'll scale a vector \(array\) of single precision numbers by a scalar. You'll learn how to) Tj T* 0 Tw (allocate memory on the GPU and transfer data to and from the GPU.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 674.0236 cm
q
BT 1 0 0 1 0 3.5 Tm 21 TL /F2 17.5 Tf 0 0 0 rg (Data transfer with unified memory) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 656.0236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Take a look at the file ) Tj /F3 10 Tf 0 0 0 rg (scale_vector_um.cu) Tj /F1 10 Tf 0 0 0 rg (. It contains a number of todos.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 638.0236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (For this exercise, you'll use ) Tj /F3 10 Tf 0 0 0 rg (cudaMallocManaged ) Tj /F1 10 Tf 0 0 0 rg (to allocate memory:) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 620.0236 cm
q
0 0 0 rg
BT 1 0 0 1 0 2 Tm /F1 10 Tf 12 TL (cudaMallocManaged\(T** devPtr, size_t size, unsigned int flags\)) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 602.0236 cm
q
BT 1 0 0 1 0 2 Tm 12 TL /F1 10 Tf 0 0 0 rg (Like most CUDA functions, ) Tj /F3 10 Tf 0 0 0 rg (cudaMallocManaged ) Tj /F1 10 Tf 0 0 0 rg (returns ) Tj /F3 10 Tf 0 0 0 rg (cudaError_t) Tj /F1 10 Tf 0 0 0 rg (.) Tj T* ET
Q
Q
q
1 0 0 1 62.69291 572.0236 cm
q
BT 1 0 0 1 0 14 Tm .474147 Tw 12 TL /F1 10 Tf 0 0 0 rg (See the source for more todos. Use ) Tj /F3 10 Tf 0 0 0 rg (nvcc) Tj ( ) Tj (-o) Tj ( ) Tj (scale_vector_um) Tj ( ) Tj (scale_vector_um.cu ) Tj /F1 10 Tf 0 0 0 rg (to compile) Tj T* 0 Tw (the code and then run it.) Tj T* ET
Q
Q
 
endstream
endobj
12 0 obj
<< /Nums [ 0 13 0 R ] >>
endobj
13 0 obj
<< /S /D /St 1 >>
endobj
xref
0 14
0000000000 65535 f
0000000075 00000 n
0000000129 00000 n
0000000239 00000 n
0000000354 00000 n
0000000462 00000 n
0000000671 00000 n
0000000778 00000 n
0000001000 00000 n
0000001074 00000 n
0000001196 00000 n
0000001259 00000 n
0000003119 00000 n
0000003163 00000 n
trailer
<< /ID 
 % ReportLab generated PDF document -- digest (http://www.reportlab.com)
 [(\372\324\256R\351\225|+\0010\244U6nB\231) (\372\324\256R\351\225|+\0010\244U6nB\231)]
 /Info 7 0 R /Root 6 0 R /Size 14 >>
startxref
3200
%%EOF
